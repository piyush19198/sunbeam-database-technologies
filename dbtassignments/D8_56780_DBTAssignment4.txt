1. Write a query that counts all orders for October 3


d8_56780>select count(onum) from orders where odate='1990-10-03';
+-------------+
| count(onum) |
+-------------+
|           5 |
+-------------+
1 row in set (0.00 sec)









2. Write a query that counts the number of different non-NULL city values in the Customers
table.


d8_56780>select count(distinct city) from customers;
+----------------------+
| count(distinct city) |
+----------------------+
|                    4 |
+----------------------+
1 row in set (0.00 sec)

d8_56780>












3. Find average commission of salespeople in London.


d8_56780>select avg(comm) from salespeople where City='london';
+-----------+
| avg(comm) |
+-----------+
|  0.115000 |
+-----------+
1 row in set (0.00 sec)

d8_56780>













4. Extract cnum, cname and city from customer table if and only if one or more of the
customers in the table are located in San Jose.


d8_56780>select cnum, cname, city from customers where city='San Jose';
+------+----------+----------+
| cnum | cname    | city     |
+------+----------+----------+
| 2003 | Liu      | San Jose |
| 2008 | Cisneros | San Jose |
+------+----------+----------+
2 rows in set (0.00 sec)

d8_56780>












5. Display all the Suppliers, belonging to cities starting with the letter ‘L’


d8_56780>select Sname from s where city like 'L%';
+-------+
| Sname |
+-------+
| Clark |
| Smith |
+-------+
2 rows in set (0.00 sec)

d8_56780>


















6. Display all the Projects, with the third letter in JNAME as ‘n’


d8_56780>select Jname from j where jname like '__n%';
+---------+
| Jname   |
+---------+
| Punch   |
| Console |
+---------+
2 rows in set (0.00 sec)

d8_56780>



















7. Display all the Supplier names with the initial letter capital.

d8_56780>select concat(upper(substring(sname,1,1)),lower(substring(sname,2))) from s;
+---------------------------------------------------------------+
| concat(upper(substring(sname,1,1)),lower(substring(sname,2))) |
+---------------------------------------------------------------+
| Jones                                                         |
| Blake                                                         |
| Clark                                                         |
| Adams                                                         |
| Smith                                                         |
+---------------------------------------------------------------+
5 rows in set (0.00 sec)

d8_56780>


















8. Display all the Supplier names in upper case.


d8_56780>select upper(sname) from s;
+--------------+
| upper(sname) |
+--------------+
| JONES        |
| BLAKE        |
| CLARK        |
| ADAMS        |
| SMITH        |
+--------------+
5 rows in set (0.00 sec)

d8_56780>
























9. Display all the Supplier names in lower case



d8_56780>select lower(sname) from s;
+--------------+
| lower(sname) |
+--------------+
| jones        |
| blake        |
| clark        |
| adams        |
| smith        |
+--------------+
5 rows in set (0.00 sec)

d8_56780>













10. Display the Supplier names and the lengths of the names


d8_56780>select Sname, length(sname) from s;
+-------+---------------+
| Sname | length(sname) |
+-------+---------------+
| Jones |             5 |
| Blake |             5 |
| Clark |             5 |
| Adams |             5 |
| Smith |             5 |
+-------+---------------+
5 rows in set (0.00 sec)

d8_56780>















11. Display the current day (e.g. Thursday).


d8_56780>select dayname(now());
+----------------+
| dayname(now()) |
+----------------+
| Thursday       |
+----------------+
1 row in set (0.00 sec)

















12. Display the minimum Status in the Supplier table


d8_56780>select min(Status) from s;
+-------------+
| min(Status) |
+-------------+
|          10 |
+-------------+
1 row in set (0.00 sec)

d8_56780>
















13. Display the maximum Weight in the Parts table.


d8_56780>select max(weight) from p;
+-------------+
| max(weight) |
+-------------+
|          19 |
+-------------+
1 row in set (0.00 sec)

d8_56780>















14. Display the average Weight of the Parts.


d8_56780>select avg(weight) from p;
+-------------+
| avg(weight) |
+-------------+
|     15.1667 |
+-------------+
1 row in set (0.00 sec)

d8_56780>






















15. Display the total Quantity sold for part ‘P1’.


d8_56780>select sum(qty) from sp where `p#`='p1';
+----------+
| sum(qty) |
+----------+
|     1000 |
+----------+
1 row in set (0.00 sec)

d8_56780>













16. Display all the Supplier names (with ‘la’ replaced by ‘ro’)


d8_56780>select replace(Sname,'la','ro') from s;
+--------------------------+
| replace(Sname,'la','ro') |
+--------------------------+
| Jones                    |
| Broke                    |
| Crork                    |
| Adams                    |
| Smith                    |
+--------------------------+
5 rows in set (0.00 sec)

d8_56780>















17. Implement the above command such that ‘l’ is replaced with ‘r’ and ‘a’ is replaced with
‘o’.


d8_56780>select regexp_replace(regexp_replace(Sname,'l','r'),'a','o') from s;
+-------------------------------------------------------+
| regexp_replace(regexp_replace(Sname,'l','r'),'a','o') |
+-------------------------------------------------------+
| Jones                                                 |
| Broke                                                 |
| Crork                                                 |
| odoms                                                 |
| Smith                                                 |
+-------------------------------------------------------+
5 rows in set (0.00 sec)

d8_56780>





















1. Write a query on the Customers table that will find the highest rating in each city. Put the
output in this form: For the city (city), the highest rating is: (rating).


d8_56780>select concat ('For the city ',city,' the highest rating is: ',max(rating)) from customers group by city;
+----------------------------------------------------------------------+
| concat ('For the city ',city,' the highest rating is: ',max(rating)) |
+----------------------------------------------------------------------+
| For the city London the highest rating is: 100                       |
| For the city Rome the highest rating is: 200                         |
| For the city San Jose the highest rating is: 300                     |
| For the city Berlin the highest rating is: 300                       |
+----------------------------------------------------------------------+
4 rows in set (0.00 sec)

d8_56780>
















2. Write a query that totals the orders for each day and places the results in descending
order.


d8_56780>select odate, count(onum) from orders group by odate order by odate desc;
+------------+-------------+
| odate      | count(onum) |
+------------+-------------+
| 1990-10-04 |           5 |
| 1990-10-03 |           5 |
+------------+-------------+
2 rows in set (0.00 sec)

d8_56780>















3. Write a query that selects the total amount in orders for each salesperson for whom this
total is greater than the amount of the largest order in the table


d8_56780>select snum,sum(amt), max(amt) from orders group by snum having sum(amt) > (select max(amt) from orders);
+------+----------+----------+
| snum | sum(amt) | max(amt) |
+------+----------+----------+
| 1001 | 15382.07 |  9891.88 |
+------+----------+----------+
1 row in set (0.00 sec)

d8_56780>














4. Write a query that selects the highest rating in each city.


d8_56780>select city, max(rating) from customers group by city;
+----------+-------------+
| city     | max(rating) |
+----------+-------------+
| London   |         100 |
| Rome     |         200 |
| San Jose |         300 |
| Berlin   |         300 |
+----------+-------------+
4 rows in set (0.00 sec)

d8_56780>














5. Largest order taken by each salesperson with order value more than Rs.3000.


d8_56780>select snum,max(amt) from orders group by snum having max(amt)>3000;
+------+----------+
| snum | max(amt) |
+------+----------+
| 1001 |  9891.88 |
| 1002 |  5160.45 |
+------+----------+
2 rows in set (0.00 sec)

d8_56780>














6. Display manager ID and number of employees managed by the manager.

d8_56780>select manager_id, count(employee_id) from employees group by manager_id;
+------------+--------------------+
| manager_id | count(employee_id) |
+------------+--------------------+
|          0 |                  1 |
|        100 |                 14 |
|        101 |                  5 |
|        102 |                  1 |
|        103 |                  4 |
|        108 |                  5 |
|        114 |                  5 |
|        120 |                  8 |
|        121 |                  8 |
|        122 |                  8 |
|        123 |                  8 |
|        124 |                  8 |
|        145 |                  6 |
|        146 |                  6 |
|        147 |                  6 |
|        148 |                  6 |
|        149 |                  6 |
|        201 |                  1 |
|        205 |                  1 |
+------------+--------------------+
19 rows in set (0.00 sec)

d8_56780>

















7. Display the country ID and number of cities we have in the country


d8_56780>select country_id,count(city) from locations group by country_id;
+------------+-------------+
| country_id | count(city) |
+------------+-------------+
| "          |           1 |
| AU         |           1 |
| BR         |           1 |
| CA         |           2 |
| CH         |           2 |
| CN         |           1 |
| DE         |           1 |
| IN         |           1 |
| IT         |           2 |
| JP         |           2 |
| NL         |           1 |
| Ox         |           1 |
| SG         |           1 |
| UK         |           2 |
| US         |           4 |
+------------+-------------+
15 rows in set (0.00 sec)

d8_56780>























8. Display average salary of employees in each department who have commission
percentage.


d8_56780>select department_id,avg(salary) from employees where commission_pct>0 group by department_id;
+---------------+-------------+
| department_id | avg(salary) |
+---------------+-------------+
|             0 | 7000.000000 |
|            80 | 8955.882353 |
+---------------+-------------+
2 rows in set (0.00 sec)

d8_56780>
























9. Display job ID, number of employees, sum of salary, and difference between highest
salary and lowest salary of the employees of the job.


d8_56780>select job_id, count(employee_id),sum(salary),max(salary)-min(salary) from employees group by job_id;
+------------+--------------------+-------------+-------------------------+
| job_id     | count(employee_id) | sum(salary) | max(salary)-min(salary) |
+------------+--------------------+-------------+-------------------------+
| AC_ACCOUNT |                  1 |     8300.00 |                    0.00 |
| AC_MGR     |                  1 |    12000.00 |                    0.00 |
| AD_ASST    |                  1 |     4400.00 |                    0.00 |
| AD_PRES    |                  1 |    24000.00 |                    0.00 |
| AD_VP      |                  2 |    34000.00 |                    0.00 |
| FI_ACCOUNT |                  5 |    39600.00 |                 2100.00 |
| FI_MGR     |                  1 |    12000.00 |                    0.00 |
| HR_REP     |                  1 |     6500.00 |                    0.00 |
| IT_PROG    |                  5 |    28800.00 |                 4800.00 |
| MK_MAN     |                  1 |    13000.00 |                    0.00 |
| MK_REP     |                  1 |     6000.00 |                    0.00 |
| PR_REP     |                  1 |    10000.00 |                    0.00 |
| PU_CLERK   |                  5 |    13900.00 |                  600.00 |
| PU_MAN     |                  1 |    11000.00 |                    0.00 |
| SA_MAN     |                  5 |    61000.00 |                 3500.00 |
| SA_REP     |                 30 |   250500.00 |                 5400.00 |
| SH_CLERK   |                 20 |    64300.00 |                 1700.00 |
| ST_CLERK   |                 20 |    55700.00 |                 1500.00 |
| ST_MAN     |                  5 |    36400.00 |                 2400.00 |
+------------+--------------------+-------------+-------------------------+
19 rows in set (0.00 sec)

d8_56780>





10. Display job ID for jobs with average salary more than 10000. 


d8_56780>select job_id, avg(salary) from employees group by job_id having avg(salary)>10000;
+---------+--------------+
| job_id  | avg(salary)  |
+---------+--------------+
| AC_MGR  | 12000.000000 |
| AD_PRES | 24000.000000 |
| AD_VP   | 17000.000000 |
| FI_MGR  | 12000.000000 |
| MK_MAN  | 13000.000000 |
| PU_MAN  | 11000.000000 |
| SA_MAN  | 12200.000000 |
+---------+--------------+
7 rows in set (0.00 sec)

d8_56780>















11. Display years in which more than 10 employees joined.


d8_56780>select date_format(hire_date,'%Y') from employees group by date_format(hire_date,'%Y') having count(employee_id)>10;
+-----------------------------+
| date_format(hire_date,'%Y') |
+-----------------------------+
| 1987                        |
+-----------------------------+
1 row in set (0.00 sec)

d8_56780>



















12. Display departments in which more than five employees have commission percentage.


d8_56780>select department_id from employees group by department_id having count(commission_pct)>5;
+---------------+
| department_id |
+---------------+
|            30 |
|            50 |
|            80 |
|           100 |
+---------------+
4 rows in set (0.00 sec)

d8_56780>



















13. Display employee ID for employees who did more than one job in the past


d8_56780>select employee_id from job_history group by employee_id having count(employee_id)>1;
+-------------+
| employee_id |
+-------------+
|         101 |
|         176 |
|         200 |
+-------------+
3 rows in set (0.00 sec)

d8_56780>



















14. Display job ID of jobs that were done by more than 3 employees for more than 100 days.


d8_56780>select job_id from job_history where end_date-start_date>100 group by job_id having count(job_id)>3;
Empty set (0.00 sec)

d8_56780>








15. Display department ID, year, and Number of employees joined. 


d8_56780>select department_id, date_format(hire_date,'%Y'),count(employee_id) from employees group by department_id;
+---------------+-----------------------------+--------------------+
| department_id | date_format(hire_date,'%Y') | count(employee_id) |
+---------------+-----------------------------+--------------------+
|             0 | 1987                        |                  1 |
|            10 | 1987                        |                  1 |
|            20 | 1987                        |                  2 |
|            30 | 1987                        |                  6 |
|            40 | 1987                        |                  1 |
|            50 | 1987                        |                 45 |
|            60 | 1987                        |                  5 |
|            70 | 1987                        |                  1 |
|            80 | 1987                        |                 34 |
|            90 | 1987                        |                  3 |
|           100 | 1987                        |                  6 |
|           110 | 1987                        |                  2 |
+---------------+-----------------------------+--------------------+
12 rows in set (0.00 sec)

d8_56780>













16. Display how many employees joined in each month of the current year.



d8_56780>select date_format(start_date,'%m'),date_format(start_date,'%Y'), count(employee_id) from job_history where date_format(start_date,'%Y') group by start_date order by start_date;
+------------------------------+------------------------------+--------------------+
| date_format(start_date,'%m') | date_format(start_date,'%Y') | count(employee_id) |
+------------------------------+------------------------------+--------------------+
| 09                           | 1987                         |                  1 |
| 09                           | 1989                         |                  1 |
| 01                           | 1993                         |                  1 |
| 10                           | 1993                         |                  1 |
| 07                           | 1994                         |                  1 |
| 02                           | 1996                         |                  1 |
| 03                           | 1998                         |                  2 |
| 01                           | 1999                         |                  2 |
+------------------------------+------------------------------+--------------------+
8 rows in set (0.00 sec)

d8_56780>











17. Display details of departments in which the maximum salary is more than 10000.


d8_56780>select department_id from employees group by department_id having max(salary)>10000;
+---------------+
| department_id |
+---------------+
|            20 |
|            30 |
|            80 |
|            90 |
|           100 |
|           110 |
+---------------+